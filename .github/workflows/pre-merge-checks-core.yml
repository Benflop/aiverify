# Pre-merge Checks (for Python projects)
# 1. Unit tests with code coverage (pytest)
# 2. Code quality analysis (flake8)
# 3. Dependency analysis (vulnerabilities)
# 4. Dependency analysis (undesirable licenses)
# 5. Deploy reports generated from the above to GitHub Pages

name: Pre-Merge Checks

on:
  # Runs on pull request to main
  #pull_request:
  #  branches: [master, main]

  # Run this workflow manually from Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  pre-merge-checks:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      # Install redis
      - name: Install redis
        run: |
          sudo apt update
          sudo apt install redis-server

      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies
      - name: Setup pip cache/install
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: | 
          pip install -r requirements.txt
          pip install pytest pytest-mock pytest-html pytest-json pytest-cov coverage anybadge
          pip install flake8 flake8-html

      # Unit Tests & Coverage
      - name: Unit tests with coverage
        timeout-minutes: 5
        run: |
          bash ci/run-test.sh

      # flake8
      - name: Code quality analysis - lint
        if: always()
        run: |
          bash ci/run-flake8.sh

      # pip-audit
      - name: Dependency analysis - vulnerabilities & licenses
        if: always()
        run: |
          bash ci/run-pip-audit.sh

      ### Publish reports to Pages ###

      - name: Prepare artifact
        if: always()
        run: |
          mkdir _site
          mv htmlcov _site/
          mv flake8-report _site/
          mv assets _site/
          mv *.svg *.html *.md *.txt _site/

      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v1

      - name: Publish artifact to Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v1
