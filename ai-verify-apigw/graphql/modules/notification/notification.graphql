enum NotificationType {
    ReportStatus
    DatasetStatus
    ModelStatus
    General
    Error
}

enum ReadStatus {
    New
    Done
}

enum AssetType {
    Dataset
    Model
}

enum AssetStatus {
    Pending
    Valid
    Invalid
    Error
    Cancelled
}

type Notification {
    id: ObjectID!
    type: NotificationType
    readStatus: ReadStatus
    title: String!
    subject: String
    body: String
    timestamp: String!
    projectId: String
    projectName: String
    reportStatus: ProjectReportStatus
    assetType: AssetType
    assetName: String
    assetStatus: AssetStatus
}

input NotificationInput {
    type: NotificationType
    readStatus: ReadStatus
    title: String!
    subject: String
    body: String
    timestamp: String!
    projectId: String
    projectName: String
    reportStatus: ProjectReportStatus
    assetType: AssetType
    assetName: String
    assetStatus: AssetStatus
}

type updateReadStatusInput {
    readStatus: ReadStatus
}

type Query {
    notifications: [Notification]
}

type Mutation {
    createNotification(notif: NotificationInput!): Notification
    deleteNotification(id: ObjectID!): ObjectID
    updateNotificationReadStatus(id: ObjectID!, readStatus: ReadStatus): Notification
}