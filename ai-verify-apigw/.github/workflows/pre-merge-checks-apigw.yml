# Pre-merge Checks (for Nodejs/Typescript projects)
# 1. Unit tests with code coverage (jest)
# 2. Code quality analysis (lint)
# 3. Dependency analysis (vulnerabilities)
# 4. Dependency analysis (undesirable licenses)
# 5. Deploy reports generated from the above to GitHub Pages
name: Pre-Merge Checks

on:
  # Runs on pull request to main
  #pull_request:
  #  branches: [master, main]

  # Run this workflow manually from Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  pre-merge-checks:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:

      # Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Install dependencies
      - name: Setup npm cache/install
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
      - run: |
          npm install
          npm i -D jest jest-html-reporter jest-json-reporter ts-jest @jest/globals badge-maker
          npm i -D eslint eslint-formatter-html @typescript-eslint/eslint-plugin @typescript-eslint/parser

      # Compile typescript source files
      - name: Compile typescript
        if: contains(github.repository, 'ci-central')
        run: |
          npm i -D typescript
          tsc

      # Unit Tests & Coverage
      - name: Unit tests with coverage
        timeout-minutes: 5
        run: |
          set +e
          npm run coverage
          exit_code_jest=$?
          node ci/createBadges.mjs test
          node ci/createBadges.mjs coverage
          set -e
          if [ $exit_code_jest -ne 0 ]; then
            echo "jest failed, exiting..."
            exit $exit_code_jest
          fi

      # eslint
      - name: Code quality analysis - lint
        if: always()
        run: |
          set +e
          npx eslint -f html -o eslint-report.html .
          exit_code_lint=$?
          npx eslint -f json -o eslint-report.json .
          node ci/createBadges.mjs lint
          set -e
          if [ $exit_code_lint -ne 0 ]; then
            echo "lint failed, exiting..."
            exit $exit_code_lint
          fi

      # npm audit
      - name: Dependency analysis - vulnerabilities & licenses
        if: always()
        run: |
          set +e
          npm audit --json | npx npm-audit-markdown --output npm-audit-report.md
          exit_code_audit=$?
          npx markdown-to-html-cli --source npm-audit-report.md --output npm-audit-report.html -y
          npx license-checker --summary --out licenses-found.txt -y
          node ci/createBadges.mjs dependency
          echo -e "License Check Summary for apigw\n" | cat - licenses-found.txt > license-report.txt          
          node ci/createBadges.mjs license
          set -e
          if [ $exit_code_audit -ne 0 ]; then
            echo "npm audit failed, exiting..."
            exit $exit_code_audit
          fi

      ### Publish reports to Pages ###

      - name: Prepare artifact
        if: always()
        run: |
          mv coverage _site
          mv *.svg *.html *.md *.txt _site/

      - name: Upload artifact
        if: always()
        uses: actions/upload-pages-artifact@v1

      - name: Publish artifact to Pages
        if: always()
        id: deployment
        uses: actions/deploy-pages@v1
